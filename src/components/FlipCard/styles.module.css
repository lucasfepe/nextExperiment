@import url('https://fonts.googleapis.com/css2?family=Iansui&display=swap');

.cardContainer {
    margin-bottom: 20px;
    cursor: pointer;
    position: relative;
    /* transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1); */
    width: 100%;
    aspect-ratio: 2/1;
    min-height: 0;
    /* maybe not  */
    perspective: 1000px;

}

.card {
    position: relative;
    width: 100%;
    height: 100%;
    transition: all var(--flip-card-animation-duration) cubic-bezier(0.4, 0, 0.2, 1);
    transform-style: preserve-3d;
    z-index: 1;
}

.flipHint {
        font-family: "Iansui", cursive;
        font-weight: 700;
        font-style: normal;
    position: absolute;
    width:100%;
    text-align: center;
    color: var(--accent-color); 
    animation: colorChange 2s infinite;

}

@keyframes colorChange {
    0%, 100% {
        color: var(--accent-color); /* Start and end with blue */
    }
    50% {
        color: #333; /* Change to black at the midpoint */
    }
}

.cardFront {
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    border-radius: 6px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    background-color: white;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: 0;
    transform: translate(-50%, -50%) rotateY(0deg);

}

.cardBack {
    color:#333333;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    background-color: white;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    position: absolute;
    margin: 0;
    transform: rotateY(180deg);
    padding: 40px;
}

/* Not Cool: The perspective property, like transform, creates a containing block for fixed-position elements. This is a lesser-known but important behavior. */
.cardContainer.expanded {
    position: fixed;
    /* Start with initial position and size */
    top: var(--initial-top);
    left: var(--initial-left);
    width: var(--initial-width);
    height: var(--initial-height);
    margin: 0;
    z-index: 1000;
    /* Animate to final position and size */
    animation: expandCard var(--flip-card-animation-duration) cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.cardContainer.closing {
    position: fixed;
    top: var(--expanded-top);
    left: var(--expanded-left);
    width: var(--expanded-width);
    height: var(--expanded-height);
    z-index: 1000;
    animation: shrinkCard var(--flip-card-animation-duration) cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes expandCard {
    from {
        top: var(--initial-top);
        left: var(--initial-left);
        width: var(--initial-width);
        height: var(--initial-height);
        transform: translate(0, 0);
    }

    to {
        top: 50%;
        left: 50%;
        width: 90vw;
        height: 90vh;
        max-width: 560px;
        max-height: 600px;
        transform: translate(-50%, -50%);
    }
}

@keyframes shrinkCard {
    from {
        top: var(--expanded-top);
        left: var(--expanded-left);
        width: var(--expanded-width);
        height: var(--expanded-height);
        /* max-width: 560px;
        max-height: 600px;
        transform: translate(-50%, -50%); */
    }

    to {
        top: var(--initial-top);
        left: var(--initial-left);
        width: var(--initial-width);
        height: var(--initial-height);
        transform: translate(0, 0)
    }
}

.card.expanded {
    width: 90vw;
    height: 90vh;
    max-height: 600px;
    max-width: 560px;
    transform: rotateY(180deg);
    z-index: 200;
}



.card.flipped {
    transform: rotateY(180deg);
}

.card.closing {
    transform: rotateY(0deg);
}

.thumbnail {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    display: block;
}

.cardBack .thumbnail {
    height: 300px;
}

.backContent {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 5px;
    padding: 5px;
    flex-grow: 1;

}

.carouselContainer {
    display: flex;
    justify-content: center;
    flex-direction: row;
    align-items: center;
    height: 100%;
}

.carouselContainer {
    position: relative;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    padding: 0.75rem;
    height: 100%;
}

.carousel {
    height: 100%;
}

.carouselImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.carouselContainer {
    position: relative;
    height: 100%;
    width: 100%;
}

.carousel {
    height: 100%;
    width: 100%;
}

.carouselImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Make carousel items fill the container */
.carouselContainer :global(.carousel-item) {
    height: 100%;
}

/* Ensure inner container fills space */
.carouselContainer :global(.carousel-inner) {
    height: 100%;
}

.techBadge {
    margin: .3em;
}

.shortDescription {
    font-size: 10pt;
    font-style: italic;
}

.longDescription {
    font-size: 11pt;
    font-style: italic;
    line-height: 19px;
    margin-top: 2rem;
    margin-bottom: 0;
}

.placeholder {
    visibility: hidden
}

.hideOverflow {
    overflow: hidden !important;
}

@media (max-width: 945px){
    .cardContainer {
        width:auto;
        margin: 1rem 0.5rem;
    }
    
}
@media (max-width: 875px){
    .cardContainer {
        margin: 1rem 0.3rem;
        max-width: 415px;
    }
    
}
@media (max-width: 800px){
    .cardContainer {
        margin: auto;
        margin-top: 2rem;
    }
}

@media (max-width: 440px){
    .repoTitle {
        font-size: 2rem;
    }
    .cardBack {
        padding: 1.5rem;
        overflow: auto;
    }
    .backContent {
        grid-template-columns: 1fr;
    }
}
@media (max-width: 340px){
    .repoTitle {
        font-size: 1.5rem;
    }
}
@media (max-width: 260px){
    .repoTitle {
        font-size: 1.2rem;
    }
}