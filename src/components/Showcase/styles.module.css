/* src/components/Showcase/styles.module.css */
.showcase {
    width: 50%;
    position: relative;
    margin: 0 20px 20px 10px;
    max-width: 415px;
    /* align-self: flex-start; */
    height: 100%;
    min-height:0;
    overflow-y: auto;
    padding: 0.5rem 1rem 0rem 0.5rem;
    /* scrollbar-width: thin; 
    scrollbar-color: rgba(155, 155, 155, 0.5) transparent;  */
}

.showcase.expanded {
    overflow-y: visible;
}

.showcase::-webkit-scrollbar {
    width: 10px;
}

.showcase::-webkit-scrollbar-track {
    border-radius: 8px;
    background-color: #e7e7e7;
    border: 1px solid #cacaca;
}

.showcase::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: var(--accent-color);
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
}

.overlay {
    /* Cool: I learned that in order for elements to 
    be ordered by z-index they need to be in the same 
    stacking context and in order to do this 
    (except when that stacking context is the root) 
    they need to be inside the same parent
    But! a parent will always be rendered beneath its children
    so only sibling elements can be ordered by z-index
    and if one of them has its own stacking context
    (which they would if you are setting a z-index)
    then they need to be inside a created stacking context*/
    position: absolute;
    background: rgba(0, 0, 0, 0.5);
    left: 0;
    top: 0;
    width: 2000vw;
    height: 2000vh;
    top: -1000px;
    left: -1000px;
    z-index: 50;

}

.loading,
.error {
    text-align: center;
    padding: 2rem;
}

.projectCards {
    position: relative;
    z-index: 0;
    perspective: 1000px;
}

.projectCards.expanded {
    /* perspective: none; */
}